{"version":3,"sources":["network/deployments.js","network/auth.js","components/forms/uploadForm.js","components/deployments/upload.js","components/deployments/selectCreate.js","icon.png","components/submissionList.js","components/submissionMap.js","utils/safe_storage.js","components/header.js","components/forms/formList.js","components/fetch_data_enhancer.js","components/forms/archivedList.js","App.js","registerServiceWorker.js","store/reducers/auth.js","store/reducers/index.js","store/index.js","index.js","store/actions/auth.js","network/formManagement.js","network/submissions.js","network/formList.js","utils/promise.js","components/loginPanel.js"],"names":["Buffer","__webpack_require__","d","__webpack_exports__","deploymentList","createDeploymentFolder","_utils_promise__WEBPACK_IMPORTED_MODULE_0__","deployment","fetch","method","headers","Content-Type","then","handleErrors","res","json","username","password","authBase64","toString","X-Requested-With","Authorization","concat","body","JSON","stringify","name","authStatus","UploadForm","props","_this","Object","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","success","error","userDetails","hasOwnProperty","_this2","uploaderProps","action","multiple","beforeUpload","file","console","log","onStart","setState","onSuccess","onProgress","step","Math","round","percent","onError","err","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_8__","title","intent","rc_upload__WEBPACK_IMPORTED_MODULE_7__","assign","ref","React","Component","connect","auth","UploadDeployment","getDeployments","getDeploymentsPromise","cancelablePromise","promise","data","files","filter","i","catch","e","bytesToSize","bytes","parseInt","floor","pow","cancel","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_9__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","react_bootstrap__WEBPACK_IMPORTED_MODULE_12__","xs","md","geojson","map","href","url","target","size","mbtiles","osm","rc_upload__WEBPACK_IMPORTED_MODULE_8__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_10__","match","params","SelectCreateDeployment","deployments","selectDeployment","selectedDeployment","unselectDeployment","newFolderNameValue","newDeploymentName","value","folderNameAlreadyExists","includes","validFolderName","test","createDeploymentPromise","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","mdOffset","length","key","react_bootstrap__WEBPACK_IMPORTED_MODULE_13__","type","dir","placeholder","onChange","onClick","module","exports","p","jsDateFormatter","formatDate","date","toISOString","split","parseDate","str","Date","SubmissionMenu","archiveForm","event","archiveFormPromise","formId","r","formArchivedOrDelete","deleteForm","deleteFormPromise","download","urlEnding","filename","downloadName","blob","objURL","URL","createObjectURL","activeBlob","downloadCsv","toggleDialog","downloadJson","downloadAttachments","downloadFilteredCsv","filterParams","downloadFilteredJson","downloadFilteredAttachments","downloadAllOsm","downloadFilteredOsm","downloadGeojson","downloadFilteredGeojson","downloadFeaturesCsv","downloadFilteredFeaturesCsv","openDialog","role","icon","isOpen","onClose","Intent","PRIMARY","text","omkMenu","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_12__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_13__","label","osmMenu","manageMenu","hasSubmissions","react_router__WEBPACK_IMPORTED_MODULE_7__","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_14__","content","position","Position","BOTTOM","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_16__","isAdmin","renderDialog","TableItemDownload","downloadFile","endsWith","react_bootstrap__WEBPACK_IMPORTED_MODULE_22__","src","responsive","SubmissionList","_this3","handleFilterStartDate","startDate","handleFilterEndDate","endDate","handleFilterDeviceIdChange","filterDeviceId","handleFilterUsernameChange","filterUsername","handlePageChange","page","handlePageSizeChange","pageSize","updatePagination","filteredSubmissions","handleActivateMap","activateMap","filterSubmissions","loading","updateFilterParams","filtered","submissions","item","moment","isBefore","isSame","isAfter","clearFilter","filterStartDate","filterEndDate","getFormDetails","getFormDetailsPromise","formList","formName","xforms","xform","totalSubmissions","getAuthStatus","getAuthStatusPromise","auth_enabled","authEnabled","getSubmissions","getSubmissionsPromise","start","end","meta","submissionTime","deviceid","image","values","entry","instanceId","hasUsername","renderCell","row","column","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_18__","getPageSlice","renderDateCell","format","renderCellImage","renderCellLink","slicedSubmissions","pageCount","prevProps","prevState","newPageSize","mod","filters","deviceId","start_date","end_date","offset","limit","keys","reduce","base","k","slice","devices","undefined","indexOf","react_bootstrap__WEBPACK_IMPORTED_MODULE_23__","react_bootstrap__WEBPACK_IMPORTED_MODULE_24__","htmlFor","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_17__","RIGHT","color","_blueprintjs_datetime__WEBPACK_IMPORTED_MODULE_21__","id","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_19__","columnWidths","numRows","_blueprintjs_table__WEBPACK_IMPORTED_MODULE_20__","cellRenderer","_this4","Array","apply","Number","isAuthenticated","react_bootstrap__WEBPACK_IMPORTED_MODULE_25__","fluid","renderFilterSection","renderPagination","renderMapSwitchButton","_submissionMap__WEBPACK_IMPORTED_MODULE_31__","renderTable","_loginPanel__WEBPACK_IMPORTED_MODULE_32__","COLOR_STEPS","sortByKey","array","sort","b","x","y","SubmissionMap","_React$Component","info_content","display_map_info","showVizTypeSwitch","vizType","legend","showLegend","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","get_color_steps_by_date","get_color_steps_by_user","orderedSubmissionDates","countPerDay","features","feature","properties","submission_date","count","steps","n","day","push","users","property_key","submission_user","submission_deviceid","setUsers","Set","userCount","user","getSource","layer","removeLayer","removeSource","getSubmissionsGeojson","get_paint_property","addSource","addLayer","source","paint","line-color","line-width","fill-color","fill-opacity","fill-outline-color","circle-color","circle-radius","circle-stroke-width","circle-stroke-color","fitBounds","extent","padding","top","bottom","left","right","linear","add_data_to_map","setPaintProperty","mapboxgl","accessToken","Map","container","style","addControl","NavigationControl","on","x1y1","point","x2y2","queryRenderedFeatures","layers","obj","ordered","forEach","orderKeys","getCanvas","cursor","selectedValue","_blueprintjs_core__WEBPACK_IMPORTED_MODULE_11__","class","getItem","localStorage","warn","setItem","removeItem","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","menu","react_default","menu_menu","menuItem","doLogout","popover","buttons","Link","navbar","navbarGroup","logo","alt","navbarHeading","align","renderAuthSubMenu","dispatch","logout","FormList","form","card","interactive","elevation","Elevation","TWO","get","buttonGroup","fill","vertical","large","Col","renderCol","TypeError","rows","Grid","toConsumableArray","Row","renderRow","dataToFetch","onUpdate","WrappedComponent","_class","_temp","_React$PureComponent","FetchDataEnhancer","_initFetching","fetchedData","set","fromJS","reloadData","initFetching","debounce","inherits","createClass","nextProps","PureComponent","displayName","getDisplayName","withFetchDataSilent","Form","visible","restoreForm","restoreFormPromise","ListGroupItem","ArchivedForms","forms","getArchivedForms","getArchivedFormsPromise","archivedForms","ListGroup","archivedList_Form","App","header_Header","Route","exact","path","component","LoginPanel","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialState","combineReducers","arguments","types","SET_USER","router","routerReducer","persistedState","safeStorage","history","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","reducers","ReactDOM","render","es","Router","src_App_0","document","getElementById","process","origin","addEventListener","response","status","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","login","_utils_safe_storage__WEBPACK_IMPORTED_MODULE_0__","CLEAR_USER","updateUserDetails","hasCanceled_","Promise","resolve","reject","val","isCanceled","ok","Error","statusText","onSubmit","preventDefault","authenticateUser","triedToLogin","bind","_home_wille_projetos_HOT_OpenMapKitServer_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","changeUsername","changePassword","react__WEBPACK_IMPORTED_MODULE_6___default","react_router__WEBPACK_IMPORTED_MODULE_8__"],"mappings":"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","file":"static/js/main.9ceb1176.chunk.js","sourcesContent":["import { handleErrors } from '../utils/promise';\n\n\nexport function deploymentList(deployment): Promise<*> {\n  let url = `/omk/deployments/`\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function createDeploymentFolder(deployment, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  let url = `/omk/odk/deployments/`;\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    },\n    body: JSON.stringify({\n      name: deployment\n    })\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n","import { handleErrors } from '../utils/promise';\n\nexport function authStatus(): Promise<*> {\n  return fetch(`/omk/auth-status/`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function login(username: string, password: string): Promise<*> {\n  return fetch(`/omk/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Upload from 'rc-upload';\n\nimport {Callout} from '@blueprintjs/core';\n\n\nclass UploadForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: false,\n      error: false,\n    }\n    this.authBase64 = null;\n    if (this.props.userDetails && this.props.userDetails.hasOwnProperty('username') && this.props.userDetails.username !== null) {\n      this.authBase64 = new Buffer(\n        `${this.props.userDetails.username}:${this.props.userDetails.password}`\n      ).toString('base64');\n    }\n  }\n\n  render() {\n    const uploaderProps = {\n      action: '/omk/odk/upload-form',\n      headers: {\n        Authorization: `Basic ${this.authBase64}`\n      },\n      multiple: true,\n      beforeUpload(file) {\n        console.log('beforeUpload', file.name);\n      },\n      onStart: (file) => {\n        this.setState({error: false});\n        this.setState({success: false});\n        console.log('onStart', file.name);\n      },\n      onSuccess: (file) => {\n        this.setState({success: true});\n        this.setState({error: false});\n        console.log('onSuccess', file);\n      },\n      onProgress(step, file) {\n        console.log('onProgress', Math.round(step.percent), file.name);\n      },\n      onError: (err) => {\n        this.setState({error: true});\n        this.setState({success: false});\n      }\n    };\n    return (<div className=\"container\">\n      {\n        this.state.success && <Callout title=\"Success!\" intent=\"success\" className=\"upload-result\">\n            Your file(s) has been successfully uploaded and the new forms are already available\n          </Callout>\n      }\n      {\n        this.state.error && <Callout title=\"Error!\" intent=\"danger\" className=\"upload-result\">\n            Some error occurred while uploading your file(s).\n          </Callout>\n      }\n      <Upload {...uploaderProps} ref=\"inner\">\n        <Callout title={\"Upload Form\"} className=\"upload-area\">\n          Drag and drop here your XSL or XSLX files to upload to OpenMapKit Server.\n        </Callout>\n      </Upload>\n    </div>);\n  }\n}\n\nconst mapStateToProps = state => ({userDetails: state.auth.userDetails});\n\nUploadForm = connect(mapStateToProps)(UploadForm);\nexport {\n  UploadForm\n};\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Upload from 'rc-upload';\nimport { Callout, Button, Colors } from '@blueprintjs/core';\nimport { Grid, Row, Col } from 'react-bootstrap';\n\nimport { cancelablePromise } from '../../utils/promise';\nimport { deploymentList } from '../../network/deployments';\n\n\nclass UploadDeployment extends React.Component {\n  getDeploymentsPromise;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      success: false,\n      error: false,\n      files: []\n    }\n    this.authBase64 = null;\n    if (this.props.userDetails && this.props.userDetails.hasOwnProperty('username') && this.props.userDetails.username !== null) {\n      this.authBase64 = new Buffer(\n        `${this.props.userDetails.username}:${this.props.userDetails.password}`\n      ).toString('base64');\n    }\n  }\n\n  componentWillUnmount() {\n    this.getDeployments && this.getDeploymentsPromise.cancel();\n  }\n\n  componentDidMount() {\n    this.getDeployments();\n  }\n\n  getDeployments = () => {\n    this.getDeploymentsPromise = cancelablePromise(\n      deploymentList()\n    );\n    this.getDeploymentsPromise.promise\n      .then(data => this.setState(\n        {files: data.filter(i => i.name === this.props.deployment)[0].files})\n      ).catch(e => console.log(e));\n  }\n\n  bytesToSize = bytes => {\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n  };\n\n  render() {\n    const uploaderProps = {\n      action: `/omk/odk/deployments/${this.props.deployment}`,\n      headers: {\n        Authorization: `Basic ${this.authBase64}`\n      },\n      multiple: true,\n      beforeUpload(file) {\n        console.log('beforeUpload', file.name);\n      },\n      onStart: (file) => {\n        this.setState({error: false});\n        this.setState({success: false});\n        console.log('onStart', file.name);\n      },\n      onSuccess: (file) => {\n        this.setState({success: true});\n        this.setState({error: false});\n        this.getDeployments();\n        console.log('onSuccess', file);\n      },\n      onProgress(step, file) {\n        console.log('onProgress', Math.round(step.percent), file.name);\n      },\n      onError: (err) => {\n        this.setState({error: true});\n        this.setState({success: false});\n      }\n    };\n\n    return (\n      <div className=\"container mt-10 mb-20\">\n        {\n          this.state.success &&\n          <Callout title=\"Success!\" intent=\"success\" className=\"upload-result\">\n            Your file(s) has been successfully uploaded and are already available on the deployments\n          </Callout>\n        }\n        {\n          this.state.error &&\n          <Callout title=\"Error!\" intent=\"danger\" className=\"upload-result\">\n            Some error occurred while uploading your file(s).\n          </Callout>\n        }\n        <div className=\"deployments mt-20\">\n          <h3>Deployment - <i>{this.props.deployment}</i></h3>\n          <hr />\n          <Row className=\"ml-0 mr-0 mt-20 pt-10 pb-10 light-gray-5\">\n            <h4>Current files</h4>\n            <Col xs={12} md={4} className=\"pt-input-group\">\n              <p><b>.geojson</b></p>\n              {(this.state.files && this.state.files.geojson) &&\n                this.state.files.geojson.map(\n                  file => <p><a href={file.url} target=\"_blank\">{file.name}</a> <i>({this.bytesToSize(file.size)})</i></p>)\n              }\n            </Col>\n            <Col xs={12} md={4} className=\"pt-input-group\">\n              <p><b>.mbtiles</b></p>\n              {(this.state.files && this.state.files.mbtiles) &&\n                this.state.files.mbtiles.map(\n                  file => <p><a href={file.url}>{file.name}</a> <i>({this.bytesToSize(file.size)})</i></p>)\n              }\n            </Col>\n            <Col xs={12} md={4} className=\"pt-input-group\">\n              <p><b>.osm</b></p>\n              {(this.state.files && this.state.files.osm) &&\n                this.state.files.osm.map(\n                  file => <p><a href={file.url} target=\"_blank\">{file.name}</a> <i>({this.bytesToSize(file.size)})</i></p>)\n              }\n            </Col>\n          </Row>\n          <hr />\n          <Upload {...uploaderProps} ref=\"inner\">\n            <Callout title={\"Upload new files\"} className=\"upload-area\">\n              Drag and drop here new deployment files.<br />\n            Accepted formats: <code>.geojson</code>, <code>.mbtiles</code>, <code>.osm</code>\n            </Callout>\n          </Upload>\n          <Link to=\"/deployments\">\n            <Button className=\"pt-button pt-intent-warning mt-10\">\n              <span className=\"pt-icon-standard pt-icon-arrow-left pt-align-left\"></span>\n              Select another folder\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nUploadDeployment = connect(\n  (state, props) => ({\n    userDetails: state.auth.userDetails,\n    deployment: props.match.params.deployment\n  })\n)(UploadDeployment);\n\nexport {\n  UploadDeployment\n};\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from '@blueprintjs/core';\nimport { ListGroup, ListGroupItem, Grid, Row, Col } from 'react-bootstrap';\n\nimport { cancelablePromise } from '../../utils/promise';\nimport { deploymentList, createDeploymentFolder } from '../../network/deployments';\n\n\nclass SelectCreateDeployment extends React.Component {\n  getDeploymentsPromise;\n  createDeploymentPromise;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      deployments: [],\n      selectedDeployment: '',\n      newDeploymentName: '',\n      folderNameAlreadyExists: false,\n      validFolderName: false\n    }\n    this.authBase64 = null;\n    if (this.props.userDetails && this.props.userDetails.hasOwnProperty('username') && this.props.userDetails.username !== null) {\n      this.authBase64 = new Buffer(\n        `${this.props.userDetails.username}:${this.props.userDetails.password}`\n      ).toString('base64');\n    }\n  }\n\n  componentWillUnmount() {\n    this.getDeployments && this.getDeploymentsPromise.cancel();\n  }\n\n  componentDidMount() {\n    this.getDeployments();\n  }\n\n  getDeployments = () => {\n    this.getDeploymentsPromise = cancelablePromise(\n      deploymentList()\n    );\n    this.getDeploymentsPromise.promise\n      .then(data => this.setState({deployments: data}))\n      .catch(e => console.log(e));\n  }\n\n  selectDeployment = name => {\n    this.setState({\n      selectedDeployment: name\n    });\n  }\n  unselectDeployment = () => {\n    this.getDeployments();\n    this.setState({\n      selectedDeployment: ''\n    });\n  }\n  newFolderNameValue = e => {\n    this.setState({\n      'newDeploymentName': e.target.value,\n      'folderNameAlreadyExists': e.target.value &&\n        this.state.deployments.map(i => i.name).includes(e.target.value),\n      'validFolderName': !/[^a-zA-Z0-9\\-\\/]/.test( e.target.value )\n    });\n  }\n  createDeploymentFolder = () => {\n    this.createDeploymentPromise = cancelablePromise(\n      createDeploymentFolder(\n        this.state.newDeploymentName,\n        this.props.userDetails.username,\n        this.props.userDetails.password\n      )\n    );\n    this.createDeploymentPromise.promise\n      .then(data => {\n        this.setState({newDeploymentName: ''});\n        this.getDeployments();\n      }).catch(e => console.log(e));\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"deployments mt-20 mb-20\">\n          <h2>Deployments</h2>\n          <p> Select a deployment folder to upload files to:</p>\n          <Grid className=\"deployments-list\">\n            <Row>\n              <Col xs={12} md={6} mdOffset={3}>\n                {this.state.deployments.length\n                  ? <ListGroup>\n                      {this.state.deployments.map(\n                        (deployment, key) =>\n                        <ListGroupItem key={key}>\n                          <div>\n                            <Link to={`/deployments/${deployment.name}`}>\n                              <h3 className=\"display-inline\">\n                                { deployment.name }\n                              </h3>\n                            </Link>\n                          </div>\n                        </ListGroupItem>\n                      )}\n                    </ListGroup>\n                  : <span>No deployments were found.</span>\n                }\n              </Col>\n            </Row>\n          </Grid>\n          <div className=\"mb-10\">\n            <p>Or create a new deployment folder:</p>\n            <input type=\"text\" dir=\"auto\" placeholder=\"New folder name\"\n              value={this.state.newDeploymentName}\n              className={`pt-input mb-10 ${this.state.folderNameAlreadyExists && 'pt-intent-danger'}`}\n              onChange={e => this.newFolderNameValue(e)}\n              />\n            {this.state.folderNameAlreadyExists &&\n              <p className=\"deployment-alert\">\n                There is already a deployment folder with this name.\n              </p>\n            }\n            {(this.state.newDeploymentName && !this.state.validFolderName) &&\n              <p className=\"deployment-alert\">\n                Please don't use spaces or special characters on the folder name.\n              </p>\n            }\n            {(this.state.newDeploymentName && !this.state.folderNameAlreadyExists &&\n                this.state.validFolderName\n              ) &&\n              <p>\n                <Button className=\"pt-button pt-intent-success\"\n                  onClick={e => this.createDeploymentFolder()}\n                  >\n                  Create folder\n                  <span className=\"pt-icon-standard pt-icon-arrow-right pt-align-right\"></span>\n                </Button>\n              </p>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({userDetails: state.auth.userDetails});\n\nSelectCreateDeployment = connect(mapStateToProps)(SelectCreateDeployment);\n\nexport {\n  SelectCreateDeployment\n};\n","module.exports = __webpack_public_path__ + \"static/media/icon.f46e375d.png\";","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router';\nimport moment from 'moment';\n\nimport {\n  AnchorButton, Button, Popover, Menu, MenuItem, Position, Icon, Dialog, Intent,\n  Tooltip\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { DateInput, IDateFormatProps } from \"@blueprintjs/datetime\";\nimport { Grid, Row, Col, Image } from 'react-bootstrap';\n\nimport { getSubmissions } from '../network/submissions';\nimport { archiveForm, deleteForm } from '../network/formManagement';\nimport { handleErrors } from '../utils/promise';\nimport { formList } from '../network/formList';\nimport { authStatus } from '../network/auth';\nimport { cancelablePromise } from '../utils/promise';\nimport { SubmissionMap } from './submissionMap';\nimport { LoginPanel } from './loginPanel';\n\n\nconst jsDateFormatter: IDateFormatProps = {\n    // note that the native implementation of Date functions differs between browsers\n    formatDate: date => date.toISOString().split('T')[0],\n    parseDate: str => new Date(str),\n    placeholder: \"YYYY-MM-DD\",\n};\n\nclass SubmissionMenu extends React.Component {\n  archiveFormPromise;\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeBlob: '',\n      downloadName: '',\n      openDialog: false,\n      formArchivedOrDelete: false\n    };\n  }\n\n  componentWillUnmount() {\n      this.archiveFormPromise && this.archiveFormPromise.cancel();\n      this.deleteFormPromise && this.deleteFormPromise.cancel();\n  }\n\n  archiveForm = (event) => {\n    this.archiveFormPromise = cancelablePromise(\n      archiveForm(\n        this.props.formId,\n        this.props.userDetails.username,\n        this.props.userDetails.password\n      )\n    );\n    this.archiveFormPromise.promise.then(\n      r => {\n        this.setState({ formArchivedOrDelete: true });\n      }\n    ).catch(e => console.log(e));\n  }\n\n  deleteForm = (event) => {\n    this.deleteFormPromise = cancelablePromise(\n      deleteForm(\n        this.props.formId,\n        this.props.userDetails.username,\n        this.props.userDetails.password\n      )\n    );\n    this.deleteFormPromise.promise.then(\n      r => {\n        this.setState({ formArchivedOrDelete: true });\n      }\n    ).catch(e => console.log(e));\n  }\n\n  download = (urlEnding, filename) => {\n    this.setState({ downloadName: '' });\n    const authBase64 = new Buffer(\n      this.props.userDetails.username + ':' + this.props.userDetails.password\n    ).toString('base64');\n    return fetch(`/omk/odk/submissions/${urlEnding}`, {\n      method: 'GET',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Authorization': `Basic ${authBase64}`\n      }\n    })\n      .then(handleErrors)\n      .then(res => res.blob())\n      .then(blob => {\n        const objURL = URL.createObjectURL(blob);\n        this.setState({ activeBlob: objURL });\n        this.setState({\n          downloadName: filename ? filename : urlEnding.split('?')[0]\n        });\n      });\n  }\n\n  isAdmin() {\n    return this.props.userDetails && this.props.userDetails.role === 'admin';\n  }\n  downloadCsv = (event) => {\n    this.download(`${this.props.formId}.csv`);\n    this.toggleDialog();\n  }\n  downloadJson = (event) => {\n    this.download(`${this.props.formId}.json`);\n    this.toggleDialog();\n  }\n  downloadAttachments = (event) => {\n    this.download(`${this.props.formId}.zip`);\n    this.toggleDialog();\n  }\n  downloadFilteredCsv = (event) => {\n    this.download(`${this.props.formId}.csv?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n  downloadFilteredJson = (event) => {\n    this.download(`${this.props.formId}.json?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n  downloadFilteredAttachments = (event) => {\n    this.download(`${this.props.formId}.zip?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n  downloadAllOsm = (event) => {\n    this.download(`${this.props.formId}.osm`);\n    this.toggleDialog();\n  }\n  downloadFilteredOsm = (event) => {\n    this.download(`${this.props.formId}.osm?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n  downloadGeojson = (event) => {\n    this.download(`${this.props.formId}.geojson`);\n    this.toggleDialog();\n  }\n  downloadFilteredGeojson = (event) => {\n    this.download(`${this.props.formId}.geojson?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n  downloadFeaturesCsv = (event) => {\n    this.download(`features/${this.props.formId}.csv`);\n    this.toggleDialog();\n  }\n  downloadFilteredFeaturesCsv = (event) => {\n    this.download(`features/${this.props.formId}.csv?${this.props.filterParams}`);\n    this.toggleDialog();\n  }\n\n  toggleDialog = () => this.setState({ openDialog: !this.state.openDialog });\n\n  renderDialog() {\n    return (\n      <Dialog\n        icon=\"cloud-download\"\n        isOpen={this.state.openDialog}\n        onClose={this.toggleDialog}\n        title=\"Download file\"\n      >\n        <div className=\"pt-dialog-body\">\n          {this.state.downloadName\n            ? <div>\n                <p>{this.state.downloadName}</p>\n                <AnchorButton\n                  intent={Intent.PRIMARY}\n                  className=\"pt-small\"\n                  text=\"Download\"\n                  download={this.state.downloadName}\n                  href={this.state.activeBlob}\n                />\n              </div>\n            : <div>Loading data, please wait...</div>\n          }\n\n        </div>\n      </Dialog>\n    );\n  }\n\n  render() {\n    const omkMenu = <Menu>\n      <MenuItem className=\"pt-minimal\" icon=\"th\" label=\"Download CSV\"\n        onClick={this.downloadCsv}\n        />\n      <MenuItem className=\"pt-minimal\" icon=\"code\" label=\"Download JSON\"\n        onClick={this.downloadJson}\n        />\n      <MenuItem className=\"pt-minimal\" icon=\"compressed\" label=\"Download Attachments\"\n        onClick={this.downloadAttachments}\n        />\n      <MenuItem className=\"pt-minimal\" icon=\"th\" label=\"Download Filtered CSV\"\n        onClick={this.downloadFilteredCsv}\n        />\n      <MenuItem className=\"pt-minimal\" icon=\"code\" label=\"Download Filtered JSON\"\n        onClick={this.downloadFilteredJson}\n        />\n      <MenuItem className=\"pt-minimal\" icon=\"compressed\" label=\"Download Filtered Attachments\"\n        onClick={this.downloadFilteredAttachments}\n        />\n    </Menu>;\n    const osmMenu = <Menu>\n        <MenuItem className=\"pt-minimal\" label=\"Data as OSM\"\n          onClick={this.downloadAllOsm}\n          />\n        <MenuItem className=\"pt-minimal\" label=\"Data as GeoJSON\"\n          onClick={this.downloadGeojson}\n          />\n        <MenuItem className=\"pt-minimal\" label=\"Data as CSV\"\n          onClick={this.downloadFeaturesCsv}\n          />\n        {this.props.filterParams && <Menu>\n            <MenuItem className=\"pt-minimal\" label=\"Filtered data as OSM\"\n              onClick={this.downloadFilteredOsm}\n              />\n            <MenuItem className=\"pt-minimal\" label=\"Filtered data as GeoJSON\"\n              onClick={this.downloadFilteredGeojson}\n              />\n            <MenuItem className=\"pt-minimal\" label=\"Filtered data as CSV\"\n              onClick={this.downloadFilteredFeaturesCsv}\n              />\n          </Menu>\n        }\n      </Menu>;\n    const manageMenu = <Menu>\n        <MenuItem className=\"pt-minimal\" icon=\"add-to-folder\" label=\"Archive Form\"\n          onClick={this.archiveForm}\n          />\n        {!this.props.hasSubmissions &&\n          <MenuItem className=\"pt-minimal\" icon=\"trash\" label=\"Delete Form\"\n            onClick={this.deleteForm}\n            />\n        }\n      </Menu>;\n    return (\n      <div>\n        {!this.state.formArchivedOrDelete\n          ? <div>\n              <Popover content={omkMenu} position={Position.BOTTOM} className=\"pt-intent-default\">\n                <Button icon=\"link\">ODK Data <Icon icon=\"caret-down\" /></Button>\n              </Popover>\n              <Popover content={osmMenu} position={Position.BOTTOM} className=\"pt-intent-default\">\n                <Button icon=\"path-search\">OSM Data <Icon icon=\"caret-down\" /></Button>\n              </Popover>\n              {this.isAdmin() &&\n                <Popover content={manageMenu} position={Position.BOTTOM}\n                  className=\"pt-intent-default\"\n                >\n                  <Button icon=\"cog\">Manage <Icon icon=\"caret-down\" /></Button>\n                </Popover>\n              }\n              {this.renderDialog()}\n            </div>\n          : <Redirect to='/' />\n        }\n      </div>\n    );\n  }\n};\n\n\nclass TableItemDownload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeBlob: '',\n      openDialog: false\n    }\n  }\n\n  download = (urlEnding, filename) => {\n    this.setState({ downloadName: '' });\n    const authBase64 = new Buffer(\n      this.props.userDetails.username + ':' + this.props.userDetails.password\n    ).toString('base64');\n    return fetch(`/omk/data/submissions/${urlEnding}`, {\n      method: 'GET',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Authorization': `Basic ${authBase64}`\n      }\n    })\n      .then(handleErrors)\n      .then(res => res.blob())\n      .then(blob => {\n        const objURL = URL.createObjectURL(blob);\n        this.setState({ activeBlob: objURL });\n        this.setState({\n          downloadName: filename ? filename : urlEnding.split('?')[0]\n        });\n      });\n  }\n\n  downloadFile = (event) => {\n    this.download(this.props.urlEnding, this.props.filename);\n    this.toggleDialog();\n  }\n\n  toggleDialog = () => this.setState({ openDialog: !this.state.openDialog });\n\n  renderDialog() {\n    return (\n      <Dialog\n        icon=\"cloud-download\"\n        isOpen={this.state.openDialog}\n        onClose={this.toggleDialog}\n        title=\"Download file\"\n      >\n        <div className=\"pt-dialog-body\">\n          {this.state.downloadName\n            ? <div>\n                {(this.props.filename.endsWith('.jpg') || this.props.filename.endsWith('.png'))\n                  ? <Image src={this.state.activeBlob} responsive className=\"preview-submission-img\" />\n                  : <p>{this.props.filename}</p>\n                }\n                <AnchorButton\n                  intent={Intent.PRIMARY}\n                  className=\"pt-small\"\n                  text=\"Download\"\n                  download={this.props.filename}\n                  href={this.state.activeBlob}\n                />\n              </div>\n            : <div>Loading data, please wait...</div>\n          }\n        </div>\n      </Dialog>\n    );\n  }\n\n  render() {\n    if (this.props.filename) {\n      if (this.props.filename.endsWith('.osm')) {\n        return(\n          <div>\n            <a onClick={this.downloadFile}>OSM File</a>\n            {this.renderDialog()}\n          </div>\n        );\n      } else {\n        return(\n          <div>\n            <a onClick={this.downloadFile}>Download image</a>\n            {this.renderDialog()}\n          </div>\n        );\n      }\n    } else {\n      return(\n        <span>No data</span>\n      );\n    }\n  }\n}\n\n\nclass SubmissionList extends React.Component {\n  getSubmissionsPromise;\n  getFormDetailsPromise;\n  getAuthStatusPromise;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submissions: [],\n      filteredSubmissions: [],\n      slicedSubmissions: [],\n      loading: true,\n      formName: '',\n      totalSubmissions: 0,\n      startDate: null,\n      endDate: null,\n      filterDeviceId: '',\n      filterUsername: '',\n      filterParams: 'offset=0&limit=200',\n      hasUsername: false,\n      page: 1,\n      pageSize: 200,\n      pageCount: 1,\n      activateMap: false,\n      authEnabled: true\n    }\n  }\n\n  componentWillUnmount() {\n    this.getSubmissionsPromise && this.getSubmissionsPromise.cancel();\n    this.getFormDetailsPromise && this.getFormDetailsPromise.cancel();\n    this.getAuthStatusPromise && this.getAuthStatusPromise.cancel();\n  }\n\n  componentDidMount() {\n    this.getSubmissions();\n    this.getFormDetails();\n    if (!(this.props.userDetails &&\n        this.props.userDetails.username != null)) {\n          this.getAuthStatus();\n        }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.userDetails.username !== prevProps.userDetails.username) {\n      this.getSubmissions();\n    }\n    if (prevState.page !== this.state.page || prevState.pageSize !== this.state.pageSize) {\n      this.updateFilterParams();\n    }\n  }\n\n  updatePagination(newPageSize, filtered) {\n    if (filtered.length > newPageSize) {\n      const mod = filtered.length % newPageSize;\n      this.setState({'pageCount': ((filtered.length - mod) / newPageSize) + 1});\n    } else {\n      this.setState({'pageCount': 1});\n    }\n  }\n\n  handleFilterStartDate = (date) => {\n    if (date) {\n      this.setState({ startDate: date.toISOString().split('T')[0]});\n    } else {\n      this.setState({ startDate: null });\n    }\n  }\n\n  handleFilterEndDate = (date) => {\n    if (date) {\n      this.setState({ endDate: date.toISOString().split('T')[0]});\n    } else {\n      this.setState({ endDate: null });\n    }\n  }\n\n  handleFilterDeviceIdChange = (event) => {\n    this.setState({ filterDeviceId: event.target.value });\n  }\n\n  handleFilterUsernameChange = (event) => {\n    this.setState({ filterUsername: event.target.value });\n  }\n\n  handlePageChange = (event) => {\n    this.setState({ page: event.target.value });\n  }\n\n  handlePageSizeChange = (event) => {\n    this.setState({ pageSize: event.target.value });\n    this.updatePagination(event.target.value, this.state.filteredSubmissions);\n  }\n\n  handleActivateMap = (event) => {\n    this.setState({ activateMap: !this.state.activateMap });\n    if (this.state.pageSize > 200) {\n      this.setState({ pageSize: 200 });\n    }\n  }\n\n  updateFilterParams() {\n    const filters = {\n      deviceId: this.state.filterDeviceId,\n      start_date: this.state.startDate,\n      end_date: this.state.endDate,\n      username: this.state.filterUsername,\n      offset: (this.state.page - 1) * this.state.pageSize || 0,\n      limit: this.state.pageSize || 200\n    };\n    const filterParams = Object.keys(filters).filter(\n      i => filters[i]\n    ).reduce(\n      (base, k) => `${base}${k}=${filters[k]}&`,\n    '');\n    this.setState({'filterParams': filterParams});\n  }\n\n  filterSubmissions = () => {\n    this.setState({ loading: true });\n    this.updateFilterParams();\n    this.setState({ page: 1 });\n    let filtered = this.state.submissions;\n    if (this.state.startDate) {\n      filtered = filtered.filter(\n        item =>\n          moment(this.state.startDate).isBefore(item[3], 'day') ||\n          moment(this.state.startDate).isSame(item[3], 'day')\n      );\n    }\n    if (this.state.endDate) {\n      filtered = filtered.filter(\n        item =>\n          moment(this.state.endDate).isAfter(item[3], 'day') ||\n          moment(this.state.endDate).isSame(item[3], 'day')\n      );\n    }\n    if (this.state.filterDeviceId) {\n      filtered = filtered.filter(\n        item => item[2] && item[2].toString().includes(this.state.filterDeviceId)\n      );\n    }\n    if (this.state.filterUsername) {\n      filtered = filtered.filter(\n        item => item[2] && item[2].toString().includes(this.state.filterUsername)\n      );\n    }\n    this.setState({ filteredSubmissions: filtered });\n    this.updatePagination(this.state.pageSize, filtered);\n    this.setState({ loading: false });\n  }\n\n  clearFilter = () => {\n    this.setState({ loading: true });\n    this.setState({ filteredSubmissions: this.state.submissions });\n    this.setState({ filterStartDate: null });\n    this.setState({ filterEndDate: null });\n    this.setState({ filterDeviceId: '' });\n    this.setState({ filterUsername: '' });\n    this.updatePagination(this.state.pageSize, this.state.submissions);\n    this.setState({ loading: false });\n    this.setState({\n      filterParams: `offset=${(this.state.page - 1) * this.state.pageSize || 0}&limit=${this.state.pageSize}`\n    });\n  }\n\n  getFormDetails = () => {\n    this.getFormDetailsPromise = cancelablePromise(\n      formList(this.props.formId)\n    );\n    this.getFormDetailsPromise.promise.then(\n      r => {\n        this.setState({ formName: r.xforms.xform[0].name });\n        this.setState({ totalSubmissions: r.xforms.xform[0].totalSubmissions });\n      }\n    ).catch(e => console.log(e));\n  }\n\n  getPageSlice() {\n    return this.state.filteredSubmissions.slice(\n      (this.state.page - 1) * this.state.pageSize,\n      this.state.page * this.state.pageSize\n    );\n  }\n  getAuthStatus = () => {\n    this.getAuthStatusPromise = cancelablePromise(\n      authStatus()\n    );\n    this.getAuthStatusPromise.promise.then(\n      r => {\n        console.log('response ' + r.auth_enabled);\n        this.setState({ authEnabled: r.auth_enabled });\n      }\n    ).catch(e => console.log(e));\n  }\n  getSubmissions = () => {\n    this.getSubmissionsPromise = cancelablePromise(\n      getSubmissions(\n        this.props.formId,\n        this.props.userDetails.username,\n        this.props.userDetails.password\n      )\n    );\n\n    this.getSubmissionsPromise.promise.then(\n      r => {\n        let data = r.map(i => [\n          i.start,\n          i.end ? i.end : i.meta.submissionTime,\n          i.username ? i.username : i.deviceid,\n          i.meta.submissionTime,\n          i.image,\n          Object.values(i).filter(\n            entry => typeof(entry) === 'string' && entry.endsWith('.osm')\n          )[0],\n          i.meta.instanceId.split(':')[1],\n        ]);\n        if (r.length > 0 && r[0].hasOwnProperty('username')) {\n          this.setState({ hasUsername: true });\n        }\n        this.setState({ submissions: data });\n        this.setState({ filteredSubmissions: data });\n        this.setState({ loading: false });\n        this.updatePagination(this.state.pageSize, data);\n      }\n    ).catch(e => {\n      console.log(e);\n      this.setState({ loading: false });\n    });\n  }\n\n  renderCell = (row, column) => <Cell>{ this.getPageSlice()[row][column]}</Cell>;\n\n  renderDateCell = (row, column) => <Cell>\n    {moment(this.getPageSlice()[row][column]).format('lll')}\n  </Cell>;\n\n  renderCellImage = (row, column) => <Cell>\n    {this.getPageSlice()[row][column]\n      ? <TableItemDownload\n          urlEnding={`${this.props.formId}/${this.getPageSlice()[row][column+2]}/${this.getPageSlice()[row][column]}`}\n          filename={this.getPageSlice()[row][column]}\n          userDetails={this.props.userDetails}\n        />\n      : <span>No image</span>\n    }\n  </Cell>;\n\n  renderCellLink = (row, column) => <Cell>\n    <TableItemDownload\n      urlEnding={`${this.props.formId}/${this.getPageSlice()[row][column+1]}/${this.getPageSlice()[row][column]}`}\n      filename={this.getPageSlice()[row][column]}\n      userDetails={this.props.userDetails}\n    />\n  </Cell>;\n\n  renderFilterSection() {\n    let devices = this.state.submissions.map(item => item[2]);\n    devices = devices.filter(i => i !== undefined).filter((i, k) => devices.indexOf(i) === k);\n    return(\n      <Row className=\"filters ml-0 mr-0\">\n        <Row className=\"ml-0 mr-0\">\n          <Col xs={12} md={6} className=\"pt-input-group\">\n            <label htmlFor=\"start-date\" className=\"display-block\">\n              From\n              <Tooltip content=\"Based on the Submission Date\" position={Position.RIGHT}>\n                <Icon icon=\"help\" color=\"#CED9E0\" className=\"help-icon\"/>\n              </Tooltip>\n            </label>\n            <DateInput {...jsDateFormatter}\n              id=\"start-date\"\n              onChange={this.handleFilterStartDate}\n              />\n          </Col>\n          <Col xs={12} md={6} className=\"pt-input-group\">\n            <label htmlFor=\"end-date\" className=\"display-block\">\n              To\n              <Tooltip content=\"Based on the Submission Date\" position={Position.RIGHT}>\n                <Icon icon=\"help\" color=\"#CED9E0\" className=\"help-icon\"/>\n              </Tooltip>\n            </label>\n            <DateInput {...jsDateFormatter}\n              id=\"end-date\"\n              onChange={this.handleFilterEndDate}\n              />\n          </Col>\n        </Row>\n        <Row className=\"ml-0 mr-0\">\n          {this.state.hasUsername\n            ? <Col xs={12} className=\"pt-input-group\">\n                <label htmlFor=\"filter-username\" className=\"display-block\">\n                  Username\n                </label>\n                <div className=\"pt-select\">\n                  <select onChange={this.handleFilterUsernameChange} value={this.state.filterUsername}>\n                    <option value={null} >Choose an item...</option>\n                    {devices.map(\n                      (item, k) =>\n                      <option key={k} value={ `${item}` }>\n                        { item.toString() }\n                      </option>\n                    )}\n                  </select>\n                </div>\n              </Col>\n            : <Col xs={12} className=\"pt-input-group\">\n                <label htmlFor=\"filter-deviceid\" className=\"display-block\">\n                  Device ID\n                </label>\n                <div className=\"pt-select\">\n                  <select onChange={this.handleFilterDeviceIdChange} value={this.state.filterDeviceId}>\n                    <option value={null} >Choose an item...</option>\n                    {devices.map(\n                      (item, k) =>\n                      <option key={k} value={ `${item}` }>\n                        { item.toString() }\n                      </option>\n                    )}\n                  </select>\n                </div>\n              </Col>\n            }\n        </Row>\n        <Row className=\"ml-0 mr-0\">\n          <Col xs={12} md={6} className=\"pt-input-group\">\n            <Button className=\"pt-intent-success filter-btn\"\n              icon=\"filter\" text=\"Filter\" onClick={this.filterSubmissions}\n              />\n          </Col>\n          <Col xs={12} md={6} className=\"pt-input-group\">\n            <Button className=\"pt-intent-danger filter-btn\"\n              icon=\"filter-remove\" text=\"Clear\" onClick={this.clearFilter}\n              />\n          </Col>\n        </Row>\n      </Row>\n    );\n  }\n\n  renderTable() {\n    if (this.state.loading) {\n      return(<div id=\"loading-msg\">Loading data, please wait...</div>);\n    } else {\n      if (this.state.filteredSubmissions.length === 0) {\n        return(<div id=\"loading-msg\">No data was found.</div>);\n      } else {\n        return (\n          <Table className=\"submissions-table center-block\"\n            columnWidths={[170,170,170,170,140,140]}\n            numRows={this.getPageSlice().length}\n            >\n            <Column name=\"Start\" cellRenderer={this.renderDateCell} />\n            <Column name=\"End\" cellRenderer={this.renderDateCell} />\n            {this.state.hasUsername\n              ? <Column name=\"Username\" cellRenderer={this.renderCell} />\n              : <Column name=\"Device ID\" cellRenderer={this.renderCell} />\n            }\n            <Column name=\"Submission Time\" cellRenderer={this.renderDateCell} />\n            <Column name=\"Image\" cellRenderer={this.renderCellImage} />\n            <Column name=\"Download\" cellRenderer={this.renderCellLink} />\n          </Table>\n        );\n      }\n    }\n  }\n\n  renderMapSwitchButton() {\n    return(\n      <Row className=\"ml-0 mr-0\">\n        <Col xs={12}>\n          {this.state.activateMap\n            ? <Button className=\"pt-intent\" icon=\"th\" text=\"Switch to Table view\"\n                onClick={() => this.setState({activateMap: false})}\n                />\n            : <Button className=\"pt-intent\" icon=\"map\" text=\"Switch to Map view\"\n                onClick={() => this.setState({activateMap: true})}\n                />\n          }\n        </Col>\n      </Row>\n    );\n  }\n\n  renderPagination() {\n    return(\n      <Row className=\"pagination pt-input-group ml-0 mr-0\">\n        <Col xs={12} md={6} className=\"pt-input-group\">\n          <label className=\"display-block\">Page Size</label>\n          <div className=\"pt-select\">\n            {this.state.activateMap\n              ? <select onChange={this.handlePageSizeChange} value={this.state.pageSize}>\n                  {[1000, 800, 600, 400, 200, 100, 50, 20].map(\n                    (item, k) =>\n                    <option key={k} value={ item }>\n                      { item.toString() }\n                    </option>\n                  )}\n                </select>\n              : <select onChange={this.handlePageSizeChange}>\n                  {[200, 100, 50, 20].map(\n                    (item, k) =>\n                    <option key={k} value={ item }>\n                      { item.toString() }\n                    </option>\n                  )}\n                </select>\n            }\n          </div>\n        </Col>\n        <Col xs={12} md={6} className=\"pt-input-group\">\n          <label className=\"display-block\">Page</label>\n          <div className=\"pt-select\">\n            <select onChange={this.handlePageChange}>\n              {Array.apply(null, { length: this.state.pageCount }).map(\n                Number.call, Number\n              ).map(\n                i => i + 1\n              ).map(\n                (item, k) =>\n                <option key={k} value={ item }>\n                  { item.toString() }\n                </option>\n              )}\n            </select>\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    const isAuthenticated = (this.props.userDetails &&\n        this.props.userDetails.username != null) || !this.state.authEnabled;\n\n    return(\n      <div>\n        {isAuthenticated\n          ? <Grid fluid={true} className=\"pl-0 pr-0\">\n              <Row className=\"ml-0 mr-0\">\n                <Col xs={12} md={3}>\n                  <div className=\"submissions-info\">\n                    <h4 className=\"break-all\">{ this.state.formName }</h4>\n                    <p>Total submissions: { this.state.totalSubmissions }</p>\n                    <SubmissionMenu\n                      formId={this.props.formId}\n                      hasSubmissions={this.state.totalSubmissions > 0}\n                      filterParams={this.state.filterParams}\n                      userDetails={this.props.userDetails}\n                      />\n                  </div>\n                  { this.renderFilterSection() }\n                  { this.renderPagination() }\n                  { this.renderMapSwitchButton() }\n                </Col>\n                <Col xs={12} md={9} className=\"ml-0 mr-0 pr-0\">\n                  {this.state.activateMap\n                    ? <SubmissionMap\n                        userDetails={this.props.userDetails}\n                        formId={this.props.formId}\n                        filterParams={this.state.filterParams}\n                        hasUsername={this.state.hasUsername}\n                      />\n                    : this.renderTable()\n                  }\n                </Col>\n              </Row>\n            </Grid>\n          : <LoginPanel />\n        }\n      </div>\n    );\n  }\n}\n\nSubmissionList = connect(\n  (state, props) => ({\n    userDetails: state.auth.userDetails,\n    formId: props.match.params.formId\n  })\n)(SubmissionList)\n\nexport {SubmissionList};\n","import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { Set } from 'immutable';\nimport { extent } from 'geojson-bounds';\nimport { array as countPerDay } from 'count-per-day';\nimport { RadioGroup, Radio, Icon } from \"@blueprintjs/core\";\n\nimport { getSubmissionsGeojson } from '../network/submissions';\n\nconst COLOR_STEPS = [\n  \"#29A634\", \"#1F4B99\", \"#D99E0B\", \"#D13913\", \"#8F398F\", \"#00B3A4\", \"#728C23\",\n  \"#DB2C6F\", \"#B07B46\", \"#7157D9\", \"#B6D94C\", \"#63411E\"\n];\nconst OTHER_COLOR = '#4580E6';\n\nfunction orderKeys(obj) {\n  const ordered = {};\n  Object.keys(obj).sort().forEach(function(key) {\n    ordered[key] = obj[key];\n  });\n  return ordered;\n}\n\nfunction sortByKey(array, key) {\n    return array.sort(function(a, b) {\n        var x = a[key]; var y = b[key];\n        return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n    });\n}\n\nexport class SubmissionMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.map = null\n    this.state = {\n      info_content: '',\n      display_map_info: 'none',\n      data: {},\n      showVizTypeSwitch: false,\n      vizType: 'default',\n      legend: [],\n      showLegend: true\n    };\n  }\n\n  get_paint_property(data) {\n    if (this.state.vizType === 'default') {\n      return OTHER_COLOR;\n    }\n    if (this.state.vizType === 'date') {\n      return this.get_color_steps_by_date(data);\n    }\n    if (this.state.vizType === 'user') {\n      return this.get_color_steps_by_user(data);\n    }\n  }\n\n  get_color_steps_by_date(data) {\n    // set colour features colours\n    let legend = [];\n    const submissionDates = countPerDay(data.features.map(\n      feature => new Date(feature.properties.submission_date)\n    )).filter(item => item.count);\n    const orderedSubmissionDates = sortByKey(submissionDates, 'count');\n    let steps = ['match', ['get', 'submission_date']];\n    orderedSubmissionDates.slice(0, 12)\n      .map((date, n) => {\n        steps = steps.concat([date.day, COLOR_STEPS[n]]);\n        legend.push([date.day, COLOR_STEPS[n]]);\n      }\n    );\n    steps.push(OTHER_COLOR);\n    legend.push(['Others', OTHER_COLOR]);\n    this.setState({'legend': legend});\n    return steps;\n  }\n\n  get_color_steps_by_user(data) {\n    var users, property_key;\n    let legend = [];\n    if (this.props.hasUsername) {\n      users = data.features.map(\n        feature => feature.properties.submission_user\n      );\n      property_key = 'submission_user';\n    } else {\n      users = data.features.map(\n        feature => feature.properties.submission_deviceid\n      );\n      property_key = 'submission_deviceid';\n    }\n    const setUsers = new Set(users);\n    var userCount = [];\n    setUsers.map(user => userCount.push(\n      {'user': user, 'count': users.filter(i => i === user).length}\n    ));\n    userCount = sortByKey(userCount, 'count');\n    let steps = ['match', ['get', property_key]];\n    userCount.slice(0, 12)\n      .map((user, n) => {\n        steps = steps.concat([user.user, COLOR_STEPS[n]]);\n        legend.push([user.user, COLOR_STEPS[n]]);\n      });\n    steps.push(OTHER_COLOR);\n    legend.push(['Others', OTHER_COLOR])\n    this.setState({'legend': legend});\n    return steps;\n  }\n\n  add_data_to_map() {\n    if (this.map.getSource('submissions')) {\n      ['submission_areas', 'submission_lines', 'submission_points'].map(\n        layer => this.map.removeLayer(layer)\n      );\n      this.map.removeSource('submissions');\n    }\n    getSubmissionsGeojson(\n      this.props.formId,\n      this.props.userDetails.username,\n      this.props.userDetails.password,\n      this.props.filterParams\n    ).then(data => {\n      this.setState({'showVizTypeSwitch': true});\n      // exclude nodes that doesn't have OSM tags\n      data['features'] = data.features.filter(i => Object.keys(i.properties).length > 7);\n      this.setState({'data': data});\n      const steps = this.get_paint_property(data);\n\n      this.map.addSource('submissions', {\n        \"type\": \"geojson\",\n        \"data\": data\n      });\n      this.map.addLayer({\n        \"id\": \"submission_lines\",\n        \"type\": \"line\",\n        \"source\": \"submissions\",\n        \"filter\": [\"==\", \"$type\", \"LineString\"],\n        \"paint\": {\n          \"line-color\": steps,\n          \"line-width\": 3\n        }\n      });\n      this.map.addLayer({\n        \"id\": \"submission_areas\",\n        \"type\": \"fill\",\n        \"source\": \"submissions\",\n        \"filter\": [\"in\", \"$type\", \"Polygon\"],\n        \"paint\": {\n          \"fill-color\": steps,\n          \"fill-opacity\": 0.4,\n          \"fill-outline-color\": \"#61FC03\"\n        }\n      });\n      this.map.addLayer({\n        \"id\": \"submission_points\",\n        \"type\": \"circle\",\n        \"source\": \"submissions\",\n        \"filter\": [\"==\", \"$type\", \"Point\"],\n        \"paint\": {\n          \"circle-color\": steps,\n          \"circle-radius\": 4,\n          \"circle-stroke-width\": 1,\n          \"circle-stroke-color\": \"#fff\"\n        }\n      });\n      this.map.fitBounds(\n        extent(data),\n        {\"padding\": {top: 80, bottom: 35, left: 35, right: 35}, \"linear\": true}\n      );\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.filterParams !== prevProps.filterParams) {\n      this.add_data_to_map();\n    }\n    if (this.state.vizType !== prevState.vizType) {\n      const steps = this.get_paint_property(this.state.data);\n      this.map.setPaintProperty(\n        'submission_lines', 'line-color', steps\n      );\n      this.map.setPaintProperty(\n        'submission_areas', 'fill-color', steps\n      );\n      this.map.setPaintProperty(\n        'submission_points', 'circle-color', steps\n      );\n    }\n  }\n\n  componentDidMount() {\n    mapboxgl.accessToken = 'pk.eyJ1IjoiaG90IiwiYSI6IlBtUmNiR1kifQ.dCS1Eu9DIRNZGktc24IwtA';\n    this.map = new mapboxgl.Map({\n      container: 'map',\n        style: 'mapbox://styles/mapbox/satellite-v9',\n    });\n    this.map.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    this.map.on('load', () => {\n      this.add_data_to_map();\n    });\n    this.map.on('click', e => {\n      var x1y1 = [e.point.x - 5, e.point.y - 5];\n      var x2y2 = [e.point.x + 5, e.point.y + 5];\n      var features = this.map.queryRenderedFeatures([x1y1, x2y2], {\n        layers: ['submission_areas', 'submission_lines', 'submission_points']\n      });\n      if (features.length) {\n        const properties = orderKeys(features[0].properties);\n        const keys = Object.keys(properties);\n        const values = Object.values(properties);\n        this.setState({\n          info_content: keys.map((key, n) =>\n            <tr key={n}>\n              <td className=\"feature-key\">{key}</td>\n              <td className=\"feature-value\">{values[n]}</td>\n            </tr>\n          )\n        });\n        this.setState({\n          display_map_info: 'block'\n        });\n      } else {\n        this.setState({\n          display_map_info: 'none',\n          info_content: ''\n        });\n      }\n    });\n    ['submission_areas', 'submission_lines', 'submission_points'].forEach(\n      layer => {\n          this.map.on('mouseenter', layer, () => {\n          this.map.getCanvas().style.cursor = 'pointer';\n        });\n\n        // Change it back to a pointer when it leaves.\n        this.map.on('mouseleave', layer, () => {\n          this.map.getCanvas().style.cursor = '';\n        });\n      }\n    );\n  }\n\n  render() {\n    return(\n      <div>\n        <div id=\"map\">\n          <div className={`map-info ${this.state.info_content && 'display-block'}`}>\n              <table><tbody>{this.state.info_content}</tbody></table>\n          </div>\n          {this.state.showVizTypeSwitch &&\n            <div className=\"color-switch\">\n              <RadioGroup\n                label=\"Features colouring\"\n                onChange={e => this.setState({ vizType: e.target.value })}\n                selectedValue={this.state.vizType}\n                >\n                <Radio label=\"Default Color\" value=\"default\" />\n                <Radio label=\"By Submission Date\" value=\"date\" />\n                <Radio label={`By ${this.props.hasUsername ? 'User' : 'Device ID'}`} value=\"user\" />\n              </RadioGroup>\n              {this.state.vizType !== 'default' &&\n                <div>\n                  <label id=\"legend-label\" class=\"pt-label\" onClick={e => this.setState({ showLegend: !this.state.showLegend })}>\n                    {this.state.showLegend\n                      ? <Icon icon=\"chevron-down\" />\n                      : <Icon icon=\"chevron-right\" />\n                    }\n                    Legend\n                  </label>\n                  {this.state.showLegend && this.state.legend.map(\n                    (item, n) => <div key={n}>\n                        <Icon icon=\"full-circle\" color={`${item[1]}`} /> <span>{item[0]}</span>\n                      </div>\n                  )}\n                </div>\n              }\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\n// Transparent wrapper over Window.localStorage\n// Adheres to the Web Storage API:\n// https://developer.mozilla.org/en-US/docs/Web/API/Storage\n\n/**\n * Wraps localStorage.getItem in a try/catch. Return null\n * if the key does not exist or localStorage fails.\n */\nfunction getItem(key: string): ?string {\n  try {\n    return localStorage.getItem(key) || null;\n  } catch (err) {\n    console.warn('Could not read from localStorage.');\n    return null;\n  }\n}\n\n/**\n * Wraps localStorage.setItem in a try/catch.\n */\nfunction setItem(key: string, value: string): void {\n  try {\n    localStorage.setItem(key, value);\n  } catch (err) {\n    console.warn('Could not write to localStorage.');\n  }\n}\n\n/**\n * Wraps localStorage.removeItem in a try/catch.\n */\nfunction removeItem(key: string): void {\n  try {\n    localStorage.removeItem(key);\n  } catch (err) {\n    console.warn('Could not delete from localStorage.');\n  }\n}\n\nexport { getItem, setItem, removeItem };\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Navbar, NavbarGroup, NavbarHeading, Button, Popover, Menu, MenuItem, Position\n} from \"@blueprintjs/core\";\n\nimport { logout } from '../store/actions/auth';\nimport { authStatus } from '../network/auth';\nimport { cancelablePromise } from '../utils/promise';\nimport logo from '../icon.png'\n\n\nclass Header extends React.Component {\n  getAuthStatusPromise;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      authEnabled: true\n    }\n  }\n\n  componentDidMount() {\n    if (!(this.props.userDetails &&\n        this.props.userDetails.username != null)) {\n          this.getAuthStatus();\n        }\n  }\n  getAuthStatus = () => {\n    this.getAuthStatusPromise = cancelablePromise(\n      authStatus()\n    );\n    this.getAuthStatusPromise.promise.then(\n      r => {\n        this.setState({ authEnabled: r.auth_enabled });\n      }\n    ).catch(e => console.log(e));\n  }\n  isAuthenticated(){\n    return this.props.userDetails &&\n      this.props.userDetails.username != null;\n  }\n  isAdmin() {\n    return (this.props.userDetails && this.props.userDetails.role === 'admin') ||\n      !this.state.authEnabled;\n  }\n  renderAuthSubMenu() {\n    if (this.state.authEnabled) {\n      if (this.isAuthenticated()) {\n        const menu = <Menu>\n          <MenuItem className=\"pt-minimal\" icon=\"log-out\" label=\"Logout\"\n            onClick={this.props.doLogout}\n            />\n        </Menu>;\n        return (\n          <Popover content={menu} position={Position.BOTTOM} className=\"pt-intent-default\">\n            <Button icon=\"user\" text={this.props.userDetails.username} />\n          </Popover>\n        );\n      } else {\n        return <Link to=\"/login\">\n          <Button className=\"pt-minimal\" icon=\"user\">\n            Log in\n          </Button>\n        </Link>\n      }\n    }\n  }\n  render() {\n    return(\n      <Navbar className=\"default-green-bg pt-dark\">\n        <NavbarGroup>\n            <img className=\"pt-icon main-logo pt-align-left\" src={logo} alt=\"omk logo\" />\n            <NavbarHeading>\n              <Link to=\"/\"><h3>OpenMapKit Server</h3></Link>\n            </NavbarHeading>\n        </NavbarGroup>\n        <NavbarGroup align=\"right\">\n            <Link to=\"/\">\n              <Button className=\"pt-minimal pt-white\" icon=\"home\">\n                Home\n              </Button>\n            </Link>\n            { this.isAdmin() &&\n              <Link to=\"/deployments\">\n                <Button className=\"pt-minimal pt-white\" icon=\"cloud-upload\">\n                  Deployments\n                </Button>\n              </Link>\n            }\n            { this.isAdmin() &&\n              <Link to=\"/upload-form\">\n                <Button className=\"pt-minimal pt-white\" icon=\"cloud-upload\">\n                  Upload Form\n                </Button>\n              </Link>\n            }\n            { this.isAdmin() &&\n              <Link to=\"/archived-forms\">\n                <Button className=\"pt-minimal pt-white\" icon=\"folder-close\">\n                  Archived Forms\n                </Button>\n              </Link>\n            }\n            { this.renderAuthSubMenu() }\n        </NavbarGroup>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userDetails: state.auth.userDetails\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    doLogout: () => dispatch(logout())\n  };\n};\n\nHeader = connect(mapStateToProps, mapDispatchToProps)(Header);\n\nexport { Header };\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Map } from 'immutable';\nimport { AnchorButton, Button, ButtonGroup, Card, Elevation } from '@blueprintjs/core';\nimport { Grid, Row, Col } from 'react-bootstrap';\n\nimport { formList } from '../../network/formList';\nimport { cancelablePromise } from '../../utils/promise';\nimport { withFetchDataSilent } from '../fetch_data_enhancer';\n\n\ntype propsType = {\n  data: Map<string, any>\n};\n\nclass FormList extends React.Component<any, propsType, any> {\n\n  renderCol(form) {\n    return(\n      <Card interactive={true} elevation={Elevation.TWO}>\n          <h5 className=\"card-title\">{ form.get('name') }</h5>\n        <div className=\"text-left form-info\">\n          <p>Number of Submissions: { form.get('totalSubmissions') }</p>\n          <p>Form ID: <code>{ form.get('formID') }</code></p>\n          <ButtonGroup fill={true} vertical={true} large={false}>\n            <Link to={`/submissions/${form.get('formID')}`}>\n              <Button icon=\"list\">\n                View submissions\n              </Button>\n            </Link>\n            <AnchorButton icon=\"th\" download href={`/omk/data/forms/${form.get('formID')}.xlsx`}>\n              XSLX Form\n            </AnchorButton>\n            <AnchorButton icon=\"code\" download href={`/omk/data/forms/${form.get('formID')}.xml`}>\n              XForm XML\n            </AnchorButton>\n          </ButtonGroup>\n        </div>\n      </Card>\n    );\n  }\n\n  renderRow(data, row) {\n    return data.slice(\n      row*4, (row+1)*4\n    ).map(\n      (form, i) =>\n        <Col key={i} md={3} xs={12} className=\"forms-col\">\n          {this.renderCol(form)}\n        </Col>\n    );\n  }\n  render() {\n    let data = [];\n    let size = 0;\n    try {\n      data = this.props.data.get('data').get('xforms').get('xform');\n      size = data.size;\n    } catch (e) {\n       if (e instanceof TypeError) {}\n    }\n    let rows = Math.floor(size / 4);\n    return(\n      <Grid className=\"forms-grid\">\n        {[...Array(rows + 1).keys()].map(\n          i => <Row key={i} className=\"forms-row\">{this.renderRow(data, i)}</Row>\n        )}\n      </Grid>\n    );\n  }\n}\n\n\nFormList = withFetchDataSilent(\n  (props: propsType) => ({\n    data: cancelablePromise(formList())\n  }),\n  (nextProps: propsType, props: propsType) => true,\n  FormList\n);\n\nexport { FormList };\n","// @flow\nimport React from 'react';\nimport { Map, fromJS } from 'immutable';\nimport debounce from 'lodash.debounce';\n\n\nfunction getDisplayName(WrappedComponent: Object): string {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\ntype stateType = {\n  data: Map<string, *>\n};\n\n/**\n * @desc If any network request fails it silents it\n * It also sets state on first come first serve basis.\n * @param  onUpdate - decides whether to do the network calls on not\n */\nexport function withFetchDataSilent<P: {}, S: {}>(\n  dataToFetch: (props: P) => Object,\n  onUpdate: (P, P) => boolean,\n  WrappedComponent: Class<React.PureComponent<*, P, S>>\n): Class<React.PureComponent<void, P, stateType>> {\n  return class FetchDataEnhancer extends React.PureComponent<\n    void,\n    P,\n    stateType\n  > {\n    static displayName = `HOCFetchData${getDisplayName(WrappedComponent)}`;\n    state = {\n      data: Map()\n    };\n    fetchedData: Object;\n    initFetching: (props: P) => void;\n    constructor(props) {\n      super(props);\n      this.initFetching = debounce(this._initFetching, 500);\n    }\n    componentDidMount() {\n      this.initFetching(this.props);\n    }\n    componentWillReceiveProps(nextProps: P) {\n      if (onUpdate(nextProps, this.props)) {\n        this.initFetching(nextProps);\n      }\n    }\n    _initFetching = (props: P) => {\n      this.fetchedData = dataToFetch(props);\n      // iterate through all of cancelable promises, one for each api request\n      Object.keys(this.fetchedData).forEach(k => {\n        var prom = this.fetchedData[k];\n        prom.promise\n          .then(x => {\n            let data = this.state.data;\n            data = data.set(k, fromJS(x));\n            this.setState({ data });\n          })\n          .catch(e => console.error(e));\n      });\n    };\n    reloadData = () => {\n      this.initFetching(this.props);\n    };\n    componentWillUnmount() {\n      this.fetchedData &&\n        Object.keys(this.fetchedData).forEach(k => {\n          this.fetchedData[k] && this.fetchedData[k].cancel();\n        });\n    }\n    render() {\n      return (\n        <WrappedComponent\n          {...this.props}\n          data={this.state.data}\n          reloadData={this.reloadData}\n        />\n      );\n    }\n  };\n}\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Button } from '@blueprintjs/core';\nimport { ListGroup, ListGroupItem, Grid, Row, Col } from 'react-bootstrap';\n\nimport { cancelablePromise } from '../../utils/promise';\nimport { archivedForms, restoreForm } from '../../network/formManagement';\n\n\nclass Form extends React.Component {\n  restoreFormPromise;\n\n  state = {\n    visible: true\n  }\n\n  componentWillUnmount() {\n    this.restoreFormPromise && this.restoreFormPromise.cancel();\n  }\n\n  restoreForm = (event) => {\n    this.restoreFormPromise = cancelablePromise(\n      restoreForm(\n        this.props.formName,\n        this.props.userDetails.username,\n        this.props.userDetails.password\n      )\n    );\n    this.restoreFormPromise.promise\n      .then(\n        data => {\n          this.setState({visible: false})\n        }\n      ).catch(e => console.log(e));\n  }\n\n  render() {\n    return(\n      <ListGroupItem>\n        {this.state.visible\n          ? <div>\n              <h3 className=\"display-inline\">{ this.props.formName }</h3>\n              <Button className=\"display-inline restore-btn\" icon=\"refresh\"\n                intent=\"warning\" text=\"Restore\" onClick={this.restoreForm}\n              />\n            </div>\n          : <div>\n              <h3>Form Restored</h3>\n            </div>\n        }\n      </ListGroupItem>\n    );\n  }\n}\n\n\nclass ArchivedForms extends React.Component {\n  getArchivedFormsPromise;\n\n  state = {\n    forms: []\n  }\n\n  componentWillUnmount() {\n      this.getArchivedFormsPromise && this.getArchivedFormsPromise.cancel();\n  }\n\n  componentDidMount() {\n    this.getArchivedForms();\n  }\n\n  getArchivedForms = () => {\n    this.getArchivedFormsPromise = cancelablePromise(\n      archivedForms(this.props.userDetails.username, this.props.userDetails.password)\n    );\n    this.getArchivedFormsPromise.promise\n      .then(data => this.setState({forms: data.forms}))\n      .catch(e => console.log(e));\n  }\n\n  render() {\n    return(\n      <div className=\"archived-forms\">\n        <h2>Archived Forms</h2>\n        <Grid className=\"archived-form-list\">\n          <Row>\n            <Col xs={12} md={6} mdOffset={3}>\n              {this.state.forms.length\n                ? <ListGroup>\n                    {this.state.forms.map(\n                      (form, key) =>\n                      <Form key={key} userDetails={this.props.userDetails} formName={form} />\n                    )}\n                  </ListGroup>\n                : <span>No archived forms were found.</span>\n              }\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nArchivedForms = connect(\n  (state, props) => ({\n    userDetails: state.auth.userDetails,\n  })\n)(ArchivedForms);\n\nexport { ArchivedForms };\n","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\n\nimport { Header } from './components/header';\nimport { SubmissionList } from './components/submissionList';\nimport { LoginPanel } from './components/loginPanel';\nimport { FormList } from './components/forms/formList';\nimport { UploadForm } from './components/forms/uploadForm';\nimport { ArchivedForms } from './components/forms/archivedList';\nimport { UploadDeployment } from './components/deployments/upload';\nimport { SelectCreateDeployment } from './components/deployments/selectCreate';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Route exact path=\"/\" component={FormList} />\n        <Route exact path=\"/login\" component={LoginPanel} />\n        <Route exact path=\"/upload-form\" component={UploadForm} />\n        <Route exact path=\"/archived-forms\" component={ArchivedForms} />\n        <Route exact path=\"/deployments\" component={SelectCreateDeployment} />\n        <Route exact path=\"/deployments/:deployment\" component={UploadDeployment} />\n        <Route exact path=\"/submissions/:formId\" component={SubmissionList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types } from '../actions/auth';\n\nconst initialState = {\n  userDetails: new Map()\n};\n\nexport function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_USER: {\n      return {'userDetails': action.userDetails};\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\n\nimport { authReducer } from './auth';\n\n\nexport default combineReducers({\n  auth: authReducer,\n  router: routerReducer,\n});\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport thunk from \"redux-thunk\";\n\nimport * as safeStorage from '../utils/safe_storage';\nimport reducers from \"./reducers\";\n\n\nconst persistedState = {\n  auth: {userDetails: {\n    id: safeStorage.getItem('username'),\n    username: safeStorage.getItem('username'),\n    password: safeStorage.getItem('password'),\n    role: safeStorage.getItem('role'),\n  }}\n};\n\nexport const history = createHistory()\nconst middleware = [thunk, routerMiddleware(history)];\nconst enhancers = [];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.devToolsExtension;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nconst store = createStore(\n  reducers,\n  persistedState,\n  composedEnhancers\n);\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport createHistory from \"history/createHashHistory\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\nimport '@blueprintjs/core/lib/css/blueprint.css';\nimport '@blueprintjs/table/lib/css/table.css';\nimport '@blueprintjs/icons/lib/css/blueprint-icons.css';\nimport '@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { store } from './store';\n\nconst history = createHistory()\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\nregisterServiceWorker();\n","import * as safeStorage from '../../utils/safe_storage';\n\nexport const types = {\n  SET_USER: 'SET_USER',\n  CLEAR_USER: 'CLEAR_USER'\n};\n\n\nexport function updateUserDetails(userDetails) {\n  return {\n    type: types.SET_USER,\n    userDetails: userDetails\n  };\n}\nexport function clearUserDetails() {\n  return {\n    type: types.SET_USER,\n    userDetails: {}\n  };\n}\n\nexport const logout = () => dispatch => {\n  safeStorage.removeItem('id');\n  safeStorage.removeItem('username');\n  safeStorage.removeItem('password');\n  safeStorage.removeItem('role');\n  dispatch(clearUserDetails());\n\n};\n\nexport const login = (username, password) => dispatch => {\n  fetch(`/omk/login/`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  })\n  .then(res => {\n    return res.json();\n  })\n  .then(userDetails => {\n    safeStorage.setItem('id', userDetails.user.id);\n    safeStorage.setItem('username', userDetails.user.username);\n    safeStorage.setItem('password', userDetails.user.password);\n    safeStorage.setItem('role', userDetails.user.role);\n    dispatch(updateUserDetails(userDetails.user));\n  })\n  .catch(err => console.warn(err));\n};\n","import { handleErrors } from '../utils/promise';\n\n\nexport function archivedForms(username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  return fetch('/omk/odk/archived-forms', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function restoreForm(formName, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  const url = `/omk/odk/forms/${formName}/restore`\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function archiveForm(formName, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  const url = `/omk/odk/forms/${formName}/archive`\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function deleteForm(formName, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  const url = `/omk/odk/forms/${formName}/delete`\n  return fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n","import { handleErrors } from '../utils/promise';\n\nexport function getSubmissions(formId, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  return fetch(`/omk/odk/submissions/${formId}.json?offset=0&limit=5000`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function submitToOSM(formId, username, password): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  return fetch(`/omk/odk/submit-changesets/${formId}`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n\nexport function getSubmissionsGeojson(formId, username, password, filterParams): Promise<*> {\n  const authBase64 = new Buffer(username + ':' + password).toString('base64');\n  let url = `/omk/odk/submissions/${formId}.geojson?${filterParams}`;\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Requested-With': 'XMLHttpRequest',\n      'Authorization': `Basic ${authBase64}`\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n","import { handleErrors } from '../utils/promise';\n\nexport function formList(formId): Promise<*> {\n  let url = `/formList?json=true`\n  if (formId) {\n    url = `/formList?json=true&formid=${formId}`\n  }\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(handleErrors)\n    .then(res => {\n      return res.json();\n    });\n}\n","// @flow\n// export type cancelablePromiseType = { promise: Promise<*>, cancel: () => any };\nexport function cancelablePromise(promise: Promise<*>) {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise\n      .then(val => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val)))\n      .catch(\n        error => (hasCanceled_ ? reject({ isCanceled: true }) : reject(error))\n      );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    }\n  };\n}\nexport function handleErrors(response) {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response;\n}\n\nexport function cancelableFetchJSON(url: string) {\n  return cancelablePromise(\n    fetch(url)\n      .then(handleErrors)\n      .then(res => {\n        return res.json();\n      })\n  );\n}\n\nexport function delayPromise(\n  interval: number\n): { promise: Promise<*>, cancel: () => any } {\n  return cancelablePromise(new Promise(res => setTimeout(res, interval)));\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router'\nimport { Button } from \"@blueprintjs/core\";\n\nimport { login } from '../store/actions/auth';\n\n\nclass LoginPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: props.username ? props.username : '',\n      password: '',\n      triedToLogin: false\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.changeUsername = this.changeUsername.bind(this);\n    this.changePassword = this.changePassword.bind(this);\n  }\n  changeUsername(event) {\n    this.setState({username: event.target.value});\n  }\n  changePassword(event) {\n    this.setState({password: event.target.value});\n  }\n\n  onSubmit = event => {\n    event.preventDefault();\n    this.props.authenticateUser(this.state.username, this.state.password);\n    this.setState({triedToLogin: true});\n  }\n\n  render() {\n    return(\n      <div className=\"pt-input-group login center-block\">\n        {!this.props.username\n          ? <div>\n              <form onSubmit={this.onSubmit}>\n                <h2>Sign in</h2>\n                {this.state.triedToLogin &&\n                  <div class=\"pt-callout pt-intent-danger\">\n                    <h4 class=\"pt-callout-title\">Login failed</h4>\n                    Verify your username or password.\n                  </div>\n                }\n                <input type=\"text\" className=\"pt-input mt-10\" value={this.state.username}\n                  onChange={this.changeUsername} placeholder=\"Username\" />\n                <input type=\"password\" className=\"pt-input mt-10\" value={this.state.password}\n                  onChange={this.changePassword} placeholder=\"Enter your password...\" />\n                <Button type=\"submit\" className=\"pt-large\" intent=\"success\" icon=\"log-in\" text=\"Sign In\" />\n              </form>\n            </div>\n          : <Redirect to='/' />\n      }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.auth.userDetails ? state.auth.userDetails.username : ''\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    authenticateUser: (username, password) => dispatch(login(username, password))\n  };\n};\n\nLoginPanel = connect(mapStateToProps, mapDispatchToProps)(LoginPanel);\n\nexport { LoginPanel };\n"],"sourceRoot":""}